Code Caves:

Code caves are dead/empty blocks in a memory of a program which can be used to inject our own code. 
Instead of creating a new section, we could use existing code caves to implant our shellcode. 
We can find code caves of different sizes in almost of any PE. 
The size of the code cave does matter!. 
We would want a code cave to be larger than our shellcode so we could inject the shellcode without having to 
split it in smaller chunks.

The first step is to find a code cave, Cave Miner is an optimal python script to find code caves, 
you need to provide the size of the cave as a parameter and it will show you all the code caves larger than that size.

Cave Miner: https://github.com/Antonin-Deniau/cave_miner
----------------------------
Example:
We got two code caves larger than 700 bytes, both of them contain enough space for our shellcode. 
- Note down the virtual address for both caves.  (AKA starting address of the cave.)
      Later We will hijack the execution flow by jumping to the virtual addresses. 
      We will be using both caves later, for now, we only require one cave to implant in our shellcode. 
We can see that the code cave is only readable, 
If the code cave is only readable:
- Use LORDPE to make it writable and executable for it to execute our shellcode. 

Triggering Shellcode Upon user interaction

we donâ€™t want to hijack the execution flow right after the program is run.
We want to let the program run normally and execute shellcode upon user interaction with a specific functionality

- Open the 7zip program in Ollydbg
- right click
- search for
- all reference text strings

In reference strings we found an interesting string, a domain (http://www.7-zip.org). 
The memory address of this domain gets accessed when a user clicks on about > domain.

Note that we can have multiple user interaction triggers that can be backdoored in a single program using the 
referenced strings found. For the sake of an example we are using the domain button on about page which upon 
click opens the website www.7-zip.org in browser. 
Our objective is to trigger shellcode whenever a user clicks on the domain button.

- Restart program
- Place breakpoint at the address of user interaction
- run program 
- Change instruction: JMP <code cave>

We are redirected to an empty code cave.

PUSHAD
PUSHFD
Shellcode....
restore stack..
POPFD
POPAD
Restore Execution Flow...








Source: https://haiderm.com/fully-undetectable-backdooring-pe-file/
