Let's focus on code caves:

1) Find a section that gives me enough space to enter backdoor code 
    + Use a tool like Cave Miner or something to do this.
    + Make sure Executable and Writable permissions are enabled on this.
    
Let's say we're backdooring a program that has user interaction as "Login here: "

2) find the string 

3) Note the instructions in that area.=

3) Change the instruction to jump to your code cave

4) Save the state of the registeres prior to calling the shellcode {Make sure AD is first}
pushad
pushfd

5) Execute the instructions and note the value of ESP.

6) Generate reverse shell using msfvenom

This shellcode will originally connect to the handler and if it fails utilizes a ExitProcess API call
So if it fails, the client will stop/crash, --> 
So to fix this, remove handle_failure and failure, keep try_connect and connected
THIS IS WHERE WE DISCUSS SYNCH/ASYNC COM
We want to create a new thread by utilizing CreateThreat API call -->
We can use an already-made shellcode that will create the thread for us.
Now encode your shellcode.
Paste your encoded createthread shellcode in hex format.
popfd
popad

Enter the instruction that you ovewrote for this hijack.
Return back to the function that redirected the execution to the cave with inserting JMP < > instruction.

To preserve authenticity of the file:
- Fix the final file checksum (Found under PE Header Information)

Read more: https://pentest.blog/art-of-anti-detection-2-pe-backdoor-manufacturing/
